"use strict";(self.webpackChunkjova_js_org=self.webpackChunkjova_js_org||[]).push([["3699"],{3078:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>d,assets:()=>c,toc:()=>l,contentTitle:()=>o});var d=JSON.parse('{"id":"Documentation/index/variables/Middlewares","title":"Variable: Middlewares","description":"const Middlewares: object","source":"@site/docs/Documentation/index/variables/Middlewares.md","sourceDirName":"Documentation/index/variables","slug":"/Documentation/index/variables/Middlewares","permalink":"/docs/Documentation/index/variables/Middlewares","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"container","permalink":"/docs/Documentation/index/variables/container"},"next":{"title":"config","permalink":"/docs/Documentation/index/functions/config"}}'),i=s("5893"),t=s("65");let r={},o="Variable: Middlewares",c={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"json()",id:"json",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Name",id:"name",level:4},{value:"Constant",id:"constant",level:4},{value:"Description",id:"description",level:4},{value:"See",id:"see",level:4},{value:"static",id:"static",level:3},{value:"Name",id:"name-1",level:4},{value:"Constant",id:"constant-1",level:4},{value:"Description",id:"description-1",level:4},{value:"See",id:"see-1",level:4},{value:"urlEncoded()",id:"urlencoded",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Name",id:"name-2",level:4},{value:"Constant",id:"constant-2",level:4},{value:"Description",id:"description-2",level:4},{value:"See",id:"see-2",level:4}];function a(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"variable-middlewares",children:"Variable: Middlewares"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"const"})," ",(0,i.jsx)(n.strong,{children:"Middlewares"}),": ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Defined in: ",(0,i.jsx)(n.a,{href:"https://github.com/bracketed/jova.js/blob/8b98e10967add0dc5ed89b4032aed63e449e168e/src/index.ts#L21",children:"src/index.ts:21"})]}),"\n",(0,i.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsx)(n.h3,{id:"json",children:"json()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"json"}),": (",(0,i.jsx)(n.code,{children:"options"}),"?: ",(0,i.jsx)(n.code,{children:"OptionsJson"}),") => ",(0,i.jsx)(n.code,{children:"NextHandleFunction"})," = ",(0,i.jsx)(n.code,{children:"express.json"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Returns middleware that only parses json and only looks at requests\nwhere the Content-Type header matches the type option."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"options"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OptionsJson"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"NextHandleFunction"})}),"\n",(0,i.jsx)(n.h4,{id:"name",children:"Name"}),"\n",(0,i.jsx)(n.p,{children:"json"}),"\n",(0,i.jsx)(n.h4,{id:"constant",children:"Constant"}),"\n",(0,i.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"This is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on body-parser."}),"\n",(0,i.jsxs)(n.p,{children:["Returns middleware that only parses JSON and only looks at requests where the ",(0,i.jsx)(n.code,{children:"Content-Type"})," header matches the ",(0,i.jsx)(n.code,{children:"type"})," option.\nThis parser accepts any Unicode encoding of the body and supports automatic inflation of ",(0,i.jsx)(n.code,{children:"gzip"})," and ",(0,i.jsx)(n.code,{children:"deflate"})," encodings."]}),"\n",(0,i.jsx)(n.h4,{id:"see",children:"See"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://expressjs.com/en/5x/api.html#express.json",children:"Express Docs: express.json([options])"})}),"\n",(0,i.jsx)(n.h3,{id:"static",children:"static"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"static"}),": ",(0,i.jsx)(n.code,{children:"RequestHandlerConstructor"}),"<",(0,i.jsx)(n.code,{children:"Response"}),"<",(0,i.jsx)(n.code,{children:"any"}),", ",(0,i.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type",children:(0,i.jsx)(n.code,{children:"Record"})}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"any"}),">>> = ",(0,i.jsx)(n.code,{children:"express.static"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"name-1",children:"Name"}),"\n",(0,i.jsx)(n.p,{children:"static"}),"\n",(0,i.jsx)(n.h4,{id:"constant-1",children:"Constant"}),"\n",(0,i.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"This is a built-in middleware function in Express. It serves static files and is based on serve-static."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"root"})," argument specifies the root directory from which to serve static assets.\nThe function determines the file to serve by combining ",(0,i.jsx)(n.code,{children:"req.url"})," with the provided ",(0,i.jsx)(n.code,{children:"root"})," directory.\nWhen a file is not found, instead of sending a 404 response, it instead calls ",(0,i.jsx)(n.code,{children:"next()"})," to move on to the next middleware, allowing for stacking and fall-backs."]}),"\n",(0,i.jsx)(n.h4,{id:"see-1",children:"See"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://expressjs.com/en/5x/api.html#express.static",children:"Express Docs: express.static(root, [options])"})}),"\n",(0,i.jsx)(n.h3,{id:"urlencoded",children:"urlEncoded()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"urlEncoded"}),": (",(0,i.jsx)(n.code,{children:"options"}),"?: ",(0,i.jsx)(n.code,{children:"OptionsUrlencoded"}),") => ",(0,i.jsx)(n.code,{children:"NextHandleFunction"})," = ",(0,i.jsx)(n.code,{children:"express.urlencoded"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Returns middleware that only parses urlencoded bodies and only looks at requests\nwhere the Content-Type header matches the type option"}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"options"}),"?"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OptionsUrlencoded"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"NextHandleFunction"})}),"\n",(0,i.jsx)(n.h4,{id:"name-2",children:"Name"}),"\n",(0,i.jsx)(n.p,{children:"urlEncoded"}),"\n",(0,i.jsx)(n.h4,{id:"constant-2",children:"Constant"}),"\n",(0,i.jsx)(n.h4,{id:"description-2",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"This is a built-in middleware function in Express. It parses incoming requests with urlencoded payloads and is based on body-parser."}),"\n",(0,i.jsxs)(n.p,{children:["Returns middleware that only parses urlencoded bodies and only looks at requests where the ",(0,i.jsx)(n.code,{children:"Content-Type"})," header matches the ",(0,i.jsx)(n.code,{children:"type"})," option.\nThis parser accepts only UTF-8 encoding of the body and supports automatic inflation of ",(0,i.jsx)(n.code,{children:"gzip"})," and ",(0,i.jsx)(n.code,{children:"deflate"})," encodings."]}),"\n",(0,i.jsx)(n.h4,{id:"see-2",children:"See"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://expressjs.com/en/5x/api.html#express.urlencoded",children:"Express Docs: express.urlencoded([options])"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},65:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return r}});var d=s(7294);let i={},t=d.createContext(i);function r(e){let n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);